from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardMarkup, ReplyKeyboardMarkup, ReplyKeyboardBuilder

from src.misc.callback_factories import DealTypeCallback, DeliveryOptionCallback, UsageStatusCallback, SizeCallback, \
    PaymentTermsCallback, PalletSortCallback, ProductTypeCallback, MaterialCallback
from src.misc.enums import DealType, DeliveryOption, UsageStatus, PaymentTerms, PalletSort, ProductType, ProductMaterial


class UserKeyboards:

    @staticmethod
    def get_want_to_create_request() -> ReplyKeyboardMarkup:
        builder = ReplyKeyboardBuilder()
        builder.button(text='–•–û–ß–£')
        return builder.as_markup(resize_keyboard=True)

    @staticmethod
    def get_create_request() -> ReplyKeyboardMarkup:
        builder = ReplyKeyboardBuilder()
        builder.button(text='–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É')
        return builder.as_markup(resize_keyboard=True)

    @staticmethod
    def get_cancel_reply() -> ReplyKeyboardMarkup:
        builder = ReplyKeyboardBuilder()
        builder.button(text='–û—Ç–º–µ–Ω–∏—Ç—å')
        return builder.as_markup(resize_keyboard=True)

    @staticmethod
    def get_product_types() -> ReplyKeyboardMarkup:
        builder = ReplyKeyboardBuilder()

        for product_type in ProductType:
            builder.button(text=product_type)

        cancel_builder = ReplyKeyboardBuilder()
        builder.button(text='–û—Ç–º–µ–Ω–∏—Ç—å')

        builder.attach(cancel_builder)
        builder.adjust(2)
        return builder.as_markup(resize_keyboard=True)

    @staticmethod
    def get_deal_types() -> InlineKeyboardMarkup:
        builder = InlineKeyboardBuilder()
        builder.button(text='üõí –•–æ—á—É –∫—É–ø–∏—Ç—å', callback_data=DealTypeCallback(deal_type=DealType.BUY))
        builder.button(text='üí∏ –•–æ—á—É –ø—Ä–æ–¥–∞—Ç—å', callback_data=DealTypeCallback(deal_type=DealType.CELL))
        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def get_usage_statuses() -> InlineKeyboardMarkup:
        builder = InlineKeyboardBuilder()
        builder.button(text='üÜï –ù–æ–≤—ã–π', callback_data=UsageStatusCallback(status=UsageStatus.NEW))
        builder.button(text='üóú –ë/–£', callback_data=UsageStatusCallback(status=UsageStatus.USED))
        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def get_materials() -> InlineKeyboardMarkup:
        builder = InlineKeyboardBuilder()
        builder.button(text='–î–µ—Ä–µ–≤—è–Ω–Ω—ã–µ', callback_data=MaterialCallback(material=ProductMaterial.WOODEN))
        builder.button(text='–ü–ª–∞—Å—Ç–∏–∫–æ–≤—ã–µ', callback_data=MaterialCallback(material=ProductMaterial.PLASTIC))
        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def get_delivery_options() -> InlineKeyboardMarkup:
        builder = InlineKeyboardBuilder()
        builder.button(text='üöö –î–æ—Å—Ç–∞–≤–∫–∞', callback_data=DeliveryOptionCallback(option=DeliveryOption.DELIVERY))
        builder.button(text='üôå –°–∞–º–æ–≤—ã–≤–æ–∑', callback_data=DeliveryOptionCallback(option=DeliveryOption.PICKUP))
        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def get_sizes() -> InlineKeyboardMarkup:
        builder = InlineKeyboardBuilder()
        builder.button(text='1200x800', callback_data=SizeCallback(size='1200x800'))
        builder.button(text='1200x1000', callback_data=SizeCallback(size='1200x1000'))

        builder.button(text='‚úç –ù–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π', callback_data=SizeCallback(size='write'))
        return builder.adjust(2, 1).as_markup()

    @staticmethod
    def get_sorts() -> InlineKeyboardMarkup:
        builder = InlineKeyboardBuilder()
        builder.button(text='–ü–µ—Ä–≤—ã–π (1)', callback_data=PalletSortCallback(sort=PalletSort.FIRST))
        builder.button(text='–í—Ç–æ—Ä–æ–π (2)', callback_data=PalletSortCallback(sort=PalletSort.SECOND))
        builder.button(text='–¢—Ä–µ—Ç–∏–π (3)', callback_data=PalletSortCallback(sort=PalletSort.THIRD))
        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def get_cost() -> InlineKeyboardMarkup:
        builder = InlineKeyboardBuilder()
        builder.button(text='ü§ù –î–æ–≥–æ–≤–æ—Ä–Ω–∞—è', callback_data='cost_by_agreement')
        builder.button(text='‚úç –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é', callback_data='write_cost')
        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def get_payment_terms() -> InlineKeyboardMarkup:
        builder = InlineKeyboardBuilder()
        builder.button(text='–ù–∞–ª–∏—á–Ω—ã–º–∏', callback_data=PaymentTermsCallback(term=PaymentTerms.CASH))
        builder.button(text='–ü–µ—Ä–µ–≤–æ–¥–æ–º –Ω–∞ –∫–∞—Ä—Ç—É', callback_data=PaymentTermsCallback(term=PaymentTerms.CARD))
        builder.button(text='–ù–∞ —Å—á—ë—Ç —Å –ù–î–°', callback_data=PaymentTermsCallback(term=PaymentTerms.WITH_NDS))
        builder.button(text='–ù–∞ —Å—á—ë—Ç –±–µ–∑ –ù–î–°', callback_data=PaymentTermsCallback(term=PaymentTerms.WITHOUT_NDS))
        builder.adjust(1)
        return builder.as_markup()

    @staticmethod
    def get_pass_email_entering() -> InlineKeyboardMarkup:
        builder = InlineKeyboardBuilder()
        builder.button(text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚û°', callback_data='pass_email_empty')
        return builder.as_markup()
